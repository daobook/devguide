# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2021, Python Software Foundation
# This file is distributed under the same license as the Python Developer's
# Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python Developer's Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-22 09:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../buildbots.rst:4
msgid "Continuous Integration"
msgstr ""

#: ../../buildbots.rst:8
msgid ""
"To assert that there are no regressions in the :doc:`development and "
"maintenance branches <devcycle>`, Python has a set of dedicated machines "
"(called *buildbots* or *build workers*) used for continuous integration."
"  They span a number of hardware/operating system combinations.  "
"Furthermore, each machine hosts several *builders*, one per active "
"branch: when a new change is pushed to this branch on the public `GitHub "
"repository <https://github.com/python/cpython>`_, all corresponding "
"builders will schedule a new build to be run as soon as possible."
msgstr ""

#: ../../buildbots.rst:16
msgid "The build steps run by the buildbots are the following:"
msgstr ""

#: ../../buildbots.rst:18
msgid "Check out the source tree for the changeset which triggered the build"
msgstr ""

#: ../../buildbots.rst:19
msgid "Compile Python"
msgstr ""

#: ../../buildbots.rst:20
msgid "Run the test suite using :ref:`strenuous settings <strenuous_testing>`"
msgstr ""

#: ../../buildbots.rst:21
msgid "Clean up the build tree"
msgstr ""

#: ../../buildbots.rst:23
msgid ""
"It is your responsibility, as a core developer, to check the automatic "
"build results after you push a change to the repository.  It is therefore"
" important that you get acquainted with the way these results are "
"presented, and how various kinds of failures can be explained and "
"diagnosed."
msgstr ""

#: ../../buildbots.rst:29
msgid "In case of trouble"
msgstr ""

#: ../../buildbots.rst:31
msgid ""
"Please read this page in full. If your questions aren't answered here and"
" you need assistance with the buildbots, a good way to get help is to "
"either:"
msgstr ""

#: ../../buildbots.rst:34
msgid ""
"contact the ``python-buildbots@python.org`` mailing list where all "
"buildbot worker owners are subscribed; or"
msgstr ""

#: ../../buildbots.rst:36
msgid "contact the release manager of the branch you have issues with."
msgstr ""

#: ../../buildbots.rst:39
msgid "Buildbot failures on Pull Requests"
msgstr ""

#: ../../buildbots.rst:41
msgid ""
"The ``bedevere-bot`` on GitHub will put a message on your merged Pull "
"Request if building your commit on a stable buildbot worker fails. Take "
"care to evaluate the failure, even if it looks unrelated at first glance."
msgstr ""

#: ../../buildbots.rst:45
msgid ""
"Not all failures will generate a notification since not all builds are "
"executed after each commit. In particular, reference leaks builds take "
"several hours to complete so they are done periodically. This is why it's"
" important for you to be able to check the results yourself, too."
msgstr ""

#: ../../buildbots.rst:51
msgid "Checking results of automatic builds"
msgstr ""

#: ../../buildbots.rst:53
msgid "There are three ways of visualizing recent build results:"
msgstr ""

#: ../../buildbots.rst:55
msgid ""
"The Web interface for each branch at "
"https://www.python.org/dev/buildbot/, where the so-called \"waterfall\" "
"view presents a vertical rundown of recent builds for each builder.  When"
" interested in one build, you'll have to click on it to know which "
"changesets it corresponds to.  Note that the buildbot web pages are often"
" slow to load, be patient."
msgstr ""

#: ../../buildbots.rst:61
msgid ""
"The command-line ``bbreport.py`` client, which you can get from "
"https://code.google.com/archive/p/bbreport. Installing it is trivial: "
"just add the directory containing ``bbreport.py`` to your system path so "
"that you can run it from any filesystem location.  For example, if you "
"want to display the latest build results on the development (\"main\") "
"branch, type::"
msgstr ""

#: ../../buildbots.rst:70
msgid ""
"The buildbot \"console\" interface at "
"http://buildbot.python.org/all/#/console This works best on a wide, high "
"resolution monitor.  Clicking on the colored circles will allow you to "
"open a new page containing whatever information about that particular "
"build is of interest to you.  You can also access builder information by "
"clicking on the builder status bubbles in the top line."
msgstr ""

#: ../../buildbots.rst:77
msgid ""
"If you like IRC, having an IRC client open to the #python-dev-notifs "
"channel on irc.libera.chat is useful.  Any time a builder changes state "
"(last build passed and this one didn't, or vice versa), a message is "
"posted to the channel. Keeping an eye on the channel after pushing a "
"changeset is a simple way to get notified that there is something you "
"should look in to."
msgstr ""

#: ../../buildbots.rst:83
msgid ""
"Some buildbots are much faster than others.  Over time, you will learn "
"which ones produce the quickest results after a build, and which ones "
"take the longest time."
msgstr ""

#: ../../buildbots.rst:87
msgid ""
"Also, when several changesets are pushed in a quick succession in the "
"same branch, it often happens that a single build is scheduled for all "
"these changesets."
msgstr ""

#: ../../buildbots.rst:92
msgid "Stability"
msgstr ""

#: ../../buildbots.rst:94
msgid ""
"A subset of the buildbots are marked \"stable\".  They are taken into "
"account when making a new release.  The rule is that all stable builders "
"must be free of persistent failures when the release is cut.  It is "
"absolutely **vital** that core developers fix any issue they introduce on"
" the stable buildbots, as soon as possible."
msgstr ""

#: ../../buildbots.rst:100
msgid ""
"This does not mean that other builders' test results can be taken "
"lightly, either.  Some of them are known for having platform-specific "
"issues that prevent some tests from succeeding (or even terminating at "
"all), but introducing additional failures should generally not be an "
"option."
msgstr ""

#: ../../buildbots.rst:106
msgid "Flags-dependent failures"
msgstr ""

#: ../../buildbots.rst:108
msgid ""
"Sometimes, while you have run the :doc:`whole test suite <runtests>` "
"before committing, you may witness unexpected failures on the buildbots."
"  One source of such discrepancies is if different flags have been passed"
" to the test runner or to Python itself.  To reproduce, make sure you use"
" the same flags as the buildbots: they can be found out simply by "
"clicking the **stdio** link for the failing build's tests.  For example::"
msgstr ""

#: ../../buildbots.rst:118
msgid ""
"Running ``Lib/test/regrtest.py`` is exactly equivalent to running ``-m "
"test``."
msgstr ""

#: ../../buildbots.rst:122
msgid "Ordering-dependent failures"
msgstr ""

#: ../../buildbots.rst:124
msgid ""
"Sometimes the failure is even subtler, as it relies on the order in which"
" the tests are run.  The buildbots *randomize* test order (by using the "
"``-r`` option to the test runner) to maximize the probability that "
"potential interferences between library modules are exercised; the "
"downside is that it can make for seemingly sporadic failures."
msgstr ""

#: ../../buildbots.rst:130
msgid ""
"The ``--randseed`` option makes it easy to reproduce the exact "
"randomization used in a given build.  Again, open the ``stdio`` link for "
"the failing test run, and check the beginning of the test output proper."
msgstr ""

#: ../../buildbots.rst:134
msgid "Let's assume, for the sake of example, that the output starts with:"
msgstr ""

#: ../../buildbots.rst:148
msgid "You can reproduce the exact same order using::"
msgstr ""

#: ../../buildbots.rst:152
msgid "It will run the following sequence (trimmed for brevity):"
msgstr ""

#: ../../buildbots.rst:163
msgid ""
"If this is enough to reproduce the failure on your setup, you can then "
"bisect the test sequence to look for the specific interference causing "
"the failure.  Copy and paste the test sequence in a text file, then use "
"the ``--fromfile`` (or ``-f``) option of the test runner to run the exact"
" sequence recorded in that text file::"
msgstr ""

#: ../../buildbots.rst:171
msgid ""
"In the example sequence above, if ``test_unicode`` had failed, you would "
"first test the following sequence:"
msgstr ""

#: ../../buildbots.rst:181
msgid ""
"And, if it succeeds, the following one instead (which, hopefully, shall "
"fail):"
msgstr ""

#: ../../buildbots.rst:190
msgid ""
"Then, recursively, narrow down the search until you get a single pair of "
"tests which triggers the failure.  It is very rare that such an "
"interference involves more than **two** tests.  If this is the case, we "
"can only wish you good luck!"
msgstr ""

#: ../../buildbots.rst:196
msgid ""
"You cannot use the ``-j`` option (for parallel testing) when diagnosing "
"ordering-dependent failures.  Using ``-j`` isolates each test in a "
"pristine subprocess and, therefore, prevents you from reproducing any "
"interference between tests."
msgstr ""

#: ../../buildbots.rst:203
msgid "Transient failures"
msgstr ""

#: ../../buildbots.rst:205
msgid ""
"While we try to make the test suite as reliable as possible, some tests "
"do not reach a perfect level of reproducibility.  Some of them will "
"sometimes display spurious failures, depending on various conditions.  "
"Here are common offenders:"
msgstr ""

#: ../../buildbots.rst:210
msgid ""
"Network-related tests, such as ``test_poplib``, ``test_urllibnet``, etc. "
"Their failures can stem from adverse network conditions, or imperfect "
"thread synchronization in the test code, which often has to run a server "
"in a separate thread."
msgstr ""

#: ../../buildbots.rst:215
msgid ""
"Tests dealing with delicate issues such as inter-thread or inter-process "
"synchronization, or Unix signals: ``test_multiprocessing``, "
"``test_threading``, ``test_subprocess``, ``test_threadsignals``."
msgstr ""

#: ../../buildbots.rst:219
msgid ""
"When you think a failure might be transient, it is recommended you "
"confirm by waiting for the next build.  Still, even if the failure does "
"turn out sporadic and unpredictable, the issue should be reported on the "
"bug tracker; even better if it can be diagnosed and suppressed by fixing "
"the test's implementation, or by making its parameters - such as a "
"timeout - more robust."
msgstr ""

#: ../../buildbots.rst:227
msgid "Custom builders"
msgstr ""

#: ../../buildbots.rst:231
msgid ""
"When working on a platform-specific issue, you may want to test your "
"changes on the buildbot fleet rather than just on Travis and AppVeyor.  "
"To do so, you can make use of the `custom builders "
"<https://buildbot.python.org/all/#/builders?tags=%2Bcustom>`_. These "
"builders track the ``buildbot-custom`` short-lived branch of the "
"``python/cpython`` repository, which is only accessible to core "
"developers."
msgstr ""

#: ../../buildbots.rst:238
msgid ""
"To start a build on the custom builders, push the commit you want to test"
" to the ``buildbot-custom`` branch::"
msgstr ""

#: ../../buildbots.rst:243
msgid ""
"You may run into conflicts if another developer is currently using the "
"custom builders or forgot to delete the branch when they finished.  In "
"that case, make sure the other developer is finished and either delete "
"the branch or force-push (add the ``-f`` option) over it."
msgstr ""

#: ../../buildbots.rst:248
msgid "When you have gotten the results of your tests, delete the branch::"
msgstr ""

#: ../../buildbots.rst:252
msgid ""
"If you are interested in the results of a specific test file only, we "
"recommend you change (temporarily, of course) the contents of the "
"``buildbottest`` clause in ``Makefile.pre.in``; or, for Windows builders,"
" the ``Tools/buildbot/test.bat`` script."
msgstr ""

#: ../../buildbots.rst:258
msgid ":ref:`buildworker`"
msgstr ""

